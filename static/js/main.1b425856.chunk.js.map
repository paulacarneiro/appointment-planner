{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","onChange","required","value","selected","disabled","map","contact","name","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","type","id","e","target","placeholder","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","tile","className","Object","values","index","TileList","tiles","AppointmentsPage","appointments","addAppointment","useState","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","addContact","isDuplicate","setIsDuplicate","useEffect","includes","alert","App","ROUTES","setAppointments","setContacts","to","activeClassName","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b425856.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const ContactPicker = ({ contacts, onChange }) => {\r\n  return (\r\n    <select onChange={onChange} required>\r\n      <option key='-1' value='' selected disabled>\r\n        Select a contact...\r\n      </option>\r\n      {contacts.map(contact => (\r\n        <option key={contact.name} value={contact.name}>\r\n          {contact.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { ContactPicker } from '../contactPicker/ContactPicker';\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type='text' \r\n        id='title' \r\n        name='title' \r\n        value={title} \r\n        onChange={(e) => setTitle(e.target.value)} \r\n        placeholder='Title'\r\n        required\r\n      />\r\n      <ContactPicker \r\n        contacts={contacts} \r\n        onChange={(e) => setContact(e.target.value)}\r\n      />\r\n      <input \r\n        type='date' \r\n        id='date' \r\n        name='date' \r\n        value={date} \r\n        min={getTodayString()} \r\n        onChange={(e) => setDate(e.target.value)}\r\n        required\r\n      />\r\n      <input \r\n      type='time' \r\n      id='time' \r\n      name='time' \r\n      value={time} \r\n      onChange={(e) => setTime(e.target.value)}\r\n      required\r\n      />\r\n      <input \r\n        type='submit' \r\n        value='Submit'\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Tile = ({ tile }) => {\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {Object.values(tile).map((value, index) => (\r\n        <p key={index} className={`${index===0? 'tile-' : ''}tile`}>\r\n          {value}\r\n        </p>))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Tile } from '../tile/Tile';\r\n\r\n//shared by Contacts Page and Appointments Page\r\nexport const TileList = ({ tiles }) => {\r\n  return (\r\n    <div>\r\n      {tiles.map((tile, index) => (\r\n        <Tile key={index} tile={tile}/>\r\n      ))}\r\n    </div>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport { AppointmentForm } from '../../components/appointmentForm/AppointmentForm';\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage = ({contacts, appointments, addAppointment}) => {\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n const [title, setTitle] = useState('');\r\n const [contact, setContact] = useState('');\r\n const [date, setDate] = useState('');\r\n const [time, setTime] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n    addAppointment(title, contact, date, time);\r\n    setTitle('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm \r\n          contacts={contacts}\r\n          title={title}\r\n          contact={contact}\r\n          date={date}\r\n          time={time}\r\n          setTitle={setTitle}\r\n          setContact={setContact}\r\n          setDate={setDate}\r\n          setTime={setTime}\r\n          \r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList tiles={appointments}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const ContactForm = (({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type='text' \r\n        id='name' \r\n        name='name' \r\n        value={name} \r\n        onChange={(e) => setName(e.target.value)} \r\n        placeholder='Name'\r\n        required\r\n      />\r\n      <input \r\n        type='tel' \r\n        id='phone' \r\n        name='phone' \r\n        value={phone} \r\n        onChange={(e) => setPhone(e.target.value)} \r\n        placeholder='Phone Number' \r\n        pattern='[0-9]{3}-[0-9]{3}-[0-9]{3}'\r\n        required\r\n      />\r\n      <input \r\n        type='email' \r\n        id='email' \r\n        name='email' \r\n        value={email} \r\n        onChange={(e) => setEmail(e.target.value)} \r\n        placeholder='Email'\r\n        required\r\n      />\r\n      <input \r\n        type='submit' \r\n        value='Submit'\r\n      />\r\n    </form>\r\n  );\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ContactForm } from '../../components/contactForm/ContactForm';\r\nimport { TileList } from '../../components/tileList/TileList';\r\n\r\nexport const ContactsPage = ({\r\n  contacts, \r\n  addContact\r\n}) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isDuplicate, setIsDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n    addContact(name, phone, email);\r\n      setName('');\r\n      setPhone('');\r\n      setEmail('');\r\n\r\n    if (!isDuplicate) {\r\n      addContact(name, phone, email);\r\n      setName('');\r\n      setPhone('');\r\n      setEmail('');\r\n    } else {\r\n      alert('Name already exists in contact list.'); //!!!!\r\n    }\r\n    \r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  useEffect(() => {\r\n    if (Object.values(contacts).includes(name)) {\r\n      setIsDuplicate(true);\r\n    } else {\r\n      setIsDuplicate(false);\r\n    }\r\n\r\n  },[name, contacts]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm \r\n          name={name} \r\n          setName={setName} \r\n          phone={phone} \r\n          setPhone={setPhone} \r\n          email={email} \r\n          setEmail={setEmail} \r\n          handleSubmit={handleSubmit}  \r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList tiles={contacts}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Switch, Route, Redirect, NavLink } from 'react-router-dom';\r\n\r\nimport { AppointmentsPage } from './containers/appointmentsPage/AppointmentsPage';\r\nimport { ContactsPage } from './containers/contactsPage/ContactsPage';\r\n\r\nfunction App() {\r\n\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\nconst addContact = (name, phone, email) => {\r\n  setContacts([...contacts,\r\n    { \r\n      name: name, \r\n      phone: phone, \r\n      email: email\r\n    }\r\n  ]);\r\n};\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointments([...appointments, \r\n      {\r\n        title: title, \r\n        contact: contact, \r\n        date: date, \r\n        time: time\r\n      }\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage contacts={contacts} addContact={addContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage contacts={contacts} appointments={appointments} addAppointment={addAppointment} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  \r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}